public class Solution {
    public int divide(int dividend, int divisor) {
       
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE; // Overflow case
        }
         boolean isNegative = (dividend < 0) ^ (divisor < 0);         
       long absDividend = Math.abs((long) dividend);
        long absDivisor = Math.abs((long) divisor);
        
        long result = 0;
        
        
        while (absDividend >= absDivisor) {
            long tempDivisor = absDivisor, multiple = 1;
            
            while (absDividend >= (tempDivisor << 1)) {
                tempDivisor <<= 1;
                multiple <<= 1;
            }
            
           absDividend -= tempDivisor;
            result += multiple;
        }
        
        if (isNegative) {
            result = -result;
        }
        
       if (result < Integer.MIN_VALUE) {
            return Integer.MIN_VALUE;
        } else if (result > Integer.MAX_VALUE) {
            return Integer.MAX_VALUE;
        } else {
            return (int) result;
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.divide(10, 3)); 
        System.out.println(solution.divide(7, -3)); 
        System.out.println(solution.divide(-2147483648, -1)); 
    }
}
